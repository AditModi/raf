# pylint: disable=invalid-name,redefined-builtin
# pylint: disable=missing-class-docstring,missing-function-docstring
"""Auto generated. Do not touch."""
from mnm._lib import _APIS
# Defined in ./src/op/regs/regs.cc
_allreduce = _APIS.get("mnm.op.sym._allreduce", None)
# Defined in ./src/op/regs/regs.cc
abs = _APIS.get("mnm.op.sym.abs", None)
# Defined in ./src/op/regs/regs.cc
add = _APIS.get("mnm.op.sym.add", None)
# Defined in ./src/op/regs/regs.cc
all = _APIS.get("mnm.op.sym.all", None)
# Defined in ./src/op/regs/regs.cc
any = _APIS.get("mnm.op.sym.any", None)
# Defined in ./src/op/regs/regs.cc
argmax = _APIS.get("mnm.op.sym.argmax", None)
# Defined in ./src/op/regs/regs.cc
argmin = _APIS.get("mnm.op.sym.argmin", None)
# Defined in ./src/op/regs/regs.cc
argsort = _APIS.get("mnm.op.sym.argsort", None)
# Defined in ./src/op/regs/regs.cc
atan = _APIS.get("mnm.op.sym.atan", None)
# Defined in ./src/op/regs/regs.cc
avg_pool2d = _APIS.get("mnm.op.sym.avg_pool2d", None)
# Defined in ./src/op/regs/regs.cc
avg_pool2d_dx = _APIS.get("mnm.op.sym.avg_pool2d_dx", None)
# Defined in ./src/op/regs/regs.cc
batch_flatten = _APIS.get("mnm.op.sym.batch_flatten", None)
# Defined in ./src/op/regs/regs.cc
batch_matmul = _APIS.get("mnm.op.sym.batch_matmul", None)
# Defined in ./src/op/regs/regs.cc
batch_norm_infer = _APIS.get("mnm.op.sym.batch_norm_infer", None)
# Defined in ./src/op/regs/regs.cc
batch_norm_train = _APIS.get("mnm.op.sym.batch_norm_train", None)
# Defined in ./src/op/regs/regs.cc
batch_norm_train_dxwb = _APIS.get("mnm.op.sym.batch_norm_train_dxwb", None)
# Defined in ./src/op/regs/regs.cc
bias_add = _APIS.get("mnm.op.sym.bias_add", None)
# Defined in ./src/op/regs/regs.cc
broadcast_to = _APIS.get("mnm.op.sym.broadcast_to", None)
# Defined in ./src/op/regs/regs.cc
broadcast_to_like = _APIS.get("mnm.op.sym.broadcast_to_like", None)
# Defined in ./src/op/regs/regs.cc
cast = _APIS.get("mnm.op.sym.cast", None)
# Defined in ./src/op/regs/regs.cc
cast_like = _APIS.get("mnm.op.sym.cast_like", None)
# Defined in ./src/op/regs/regs.cc
ceil = _APIS.get("mnm.op.sym.ceil", None)
# Defined in ./src/op/regs/regs.cc
clip = _APIS.get("mnm.op.sym.clip", None)
# Defined in ./src/op/regs/regs.cc
clip_dx = _APIS.get("mnm.op.sym.clip_dx", None)
# Defined in ./src/op/regs/regs.cc
collapse_sum_like = _APIS.get("mnm.op.sym.collapse_sum_like", None)
# Defined in ./src/op/regs/regs.cc
compiler_begin = _APIS.get("mnm.op.sym.compiler_begin", None)
# Defined in ./src/op/regs/regs.cc
compiler_end = _APIS.get("mnm.op.sym.compiler_end", None)
# Defined in ./src/op/regs/regs.cc
concatenate = _APIS.get("mnm.op.sym.concatenate", None)
# Defined in ./src/op/regs/regs.cc
concatenate_dx = _APIS.get("mnm.op.sym.concatenate_dx", None)
# Defined in ./src/op/regs/regs.cc
conv2d = _APIS.get("mnm.op.sym.conv2d", None)
# Defined in ./src/op/regs/regs.cc
conv2d_dw = _APIS.get("mnm.op.sym.conv2d_dw", None)
# Defined in ./src/op/regs/regs.cc
conv2d_dx = _APIS.get("mnm.op.sym.conv2d_dx", None)
# Defined in ./src/op/regs/regs.cc
copy = _APIS.get("mnm.op.sym.copy", None)
# Defined in ./src/op/regs/regs.cc
cos = _APIS.get("mnm.op.sym.cos", None)
# Defined in ./src/op/regs/regs.cc
cross_entropy = _APIS.get("mnm.op.sym.cross_entropy", None)
# Defined in ./src/op/regs/regs.cc
cross_entropy_dpred = _APIS.get("mnm.op.sym.cross_entropy_dpred", None)
# Defined in ./src/op/regs/regs.cc
cross_entropy_dtrue = _APIS.get("mnm.op.sym.cross_entropy_dtrue", None)
# Defined in ./src/op/regs/regs.cc
dense = _APIS.get("mnm.op.sym.dense", None)
# Defined in ./src/op/regs/regs.cc
divide = _APIS.get("mnm.op.sym.divide", None)
# Defined in ./src/op/regs/regs.cc
equal = _APIS.get("mnm.op.sym.equal", None)
# Defined in ./src/op/regs/regs.cc
erf = _APIS.get("mnm.op.sym.erf", None)
# Defined in ./src/op/regs/regs.cc
erf_dx = _APIS.get("mnm.op.sym.erf_dx", None)
# Defined in ./src/op/regs/regs.cc
exp = _APIS.get("mnm.op.sym.exp", None)
# Defined in ./src/op/regs/regs.cc
expand_dims = _APIS.get("mnm.op.sym.expand_dims", None)
# Defined in ./src/op/regs/regs.cc
floor = _APIS.get("mnm.op.sym.floor", None)
# Defined in ./src/op/regs/regs.cc
gather_nd = _APIS.get("mnm.op.sym.gather_nd", None)
# Defined in ./src/op/regs/regs.cc
gather_nd_dx = _APIS.get("mnm.op.sym.gather_nd_dx", None)
# Defined in ./src/op/regs/regs.cc
get_kept_dims = _APIS.get("mnm.op.sym.get_kept_dims", None)
# Defined in ./src/op/regs/regs.cc
get_reduce_axis = _APIS.get("mnm.op.sym.get_reduce_axis", None)
# Defined in ./src/op/regs/regs.cc
get_valid_counts = _APIS.get("mnm.op.sym.get_valid_counts", None)
# Defined in ./src/op/regs/regs.cc
greater = _APIS.get("mnm.op.sym.greater", None)
# Defined in ./src/op/regs/regs.cc
greater_equal = _APIS.get("mnm.op.sym.greater_equal", None)
# Defined in ./src/op/regs/regs.cc
layer_norm = _APIS.get("mnm.op.sym.layer_norm", None)
# Defined in ./src/op/regs/regs.cc
layer_norm_dx = _APIS.get("mnm.op.sym.layer_norm_dx", None)
# Defined in ./src/op/regs/regs.cc
less = _APIS.get("mnm.op.sym.less", None)
# Defined in ./src/op/regs/regs.cc
less_equal = _APIS.get("mnm.op.sym.less_equal", None)
# Defined in ./src/op/regs/regs.cc
log = _APIS.get("mnm.op.sym.log", None)
# Defined in ./src/op/regs/regs.cc
log_softmax = _APIS.get("mnm.op.sym.log_softmax", None)
# Defined in ./src/op/regs/regs.cc
log_softmax_dx = _APIS.get("mnm.op.sym.log_softmax_dx", None)
# Defined in ./src/op/regs/regs.cc
logical_not = _APIS.get("mnm.op.sym.logical_not", None)
# Defined in ./src/op/regs/regs.cc
matmul = _APIS.get("mnm.op.sym.matmul", None)
# Defined in ./src/op/regs/regs.cc
matmul_nt = _APIS.get("mnm.op.sym.matmul_nt", None)
# Defined in ./src/op/regs/regs.cc
matmul_tn = _APIS.get("mnm.op.sym.matmul_tn", None)
# Defined in ./src/op/regs/regs.cc
matmul_tt = _APIS.get("mnm.op.sym.matmul_tt", None)
# Defined in ./src/op/regs/regs.cc
max = _APIS.get("mnm.op.sym.max", None)
# Defined in ./src/op/regs/regs.cc
max_pool2d = _APIS.get("mnm.op.sym.max_pool2d", None)
# Defined in ./src/op/regs/regs.cc
max_pool2d_dx = _APIS.get("mnm.op.sym.max_pool2d_dx", None)
# Defined in ./src/op/regs/regs.cc
maximum = _APIS.get("mnm.op.sym.maximum", None)
# Defined in ./src/op/regs/regs.cc
mean = _APIS.get("mnm.op.sym.mean", None)
# Defined in ./src/op/regs/regs.cc
mean_dx = _APIS.get("mnm.op.sym.mean_dx", None)
# Defined in ./src/op/regs/regs.cc
min = _APIS.get("mnm.op.sym.min", None)
# Defined in ./src/op/regs/regs.cc
minimum = _APIS.get("mnm.op.sym.minimum", None)
# Defined in ./src/op/regs/regs.cc
mod = _APIS.get("mnm.op.sym.mod", None)
# Defined in ./src/op/regs/regs.cc
multiply = _APIS.get("mnm.op.sym.multiply", None)
# Defined in ./src/op/regs/regs.cc
negative = _APIS.get("mnm.op.sym.negative", None)
# Defined in ./src/op/regs/regs.cc
nll_loss = _APIS.get("mnm.op.sym.nll_loss", None)
# Defined in ./src/op/regs/regs.cc
nll_loss_dpred = _APIS.get("mnm.op.sym.nll_loss_dpred", None)
# Defined in ./src/op/regs/regs.cc
nll_loss_dtrue = _APIS.get("mnm.op.sym.nll_loss_dtrue", None)
# Defined in ./src/op/regs/regs.cc
non_max_suppression = _APIS.get("mnm.op.sym.non_max_suppression", None)
# Defined in ./src/op/regs/regs.cc
not_equal = _APIS.get("mnm.op.sym.not_equal", None)
# Defined in ./src/op/regs/regs.cc
pad = _APIS.get("mnm.op.sym.pad", None)
# Defined in ./src/op/regs/regs.cc
power = _APIS.get("mnm.op.sym.power", None)
# Defined in ./src/op/regs/regs.cc
prod = _APIS.get("mnm.op.sym.prod", None)
# Defined in ./src/op/regs/regs.cc
relu = _APIS.get("mnm.op.sym.relu", None)
# Defined in ./src/op/regs/regs.cc
relu_dx = _APIS.get("mnm.op.sym.relu_dx", None)
# Defined in ./src/op/regs/regs.cc
repeat = _APIS.get("mnm.op.sym.repeat", None)
# Defined in ./src/op/regs/regs.cc
reshape = _APIS.get("mnm.op.sym.reshape", None)
# Defined in ./src/op/regs/regs.cc
reverse = _APIS.get("mnm.op.sym.reverse", None)
# Defined in ./src/op/regs/regs.cc
reverse_sequence = _APIS.get("mnm.op.sym.reverse_sequence", None)
# Defined in ./src/op/regs/regs.cc
round = _APIS.get("mnm.op.sym.round", None)
# Defined in ./src/op/regs/regs.cc
rsqrt = _APIS.get("mnm.op.sym.rsqrt", None)
# Defined in ./src/op/regs/regs.cc
sequence_mask = _APIS.get("mnm.op.sym.sequence_mask", None)
# Defined in ./src/op/regs/regs.cc
sgd = _APIS.get("mnm.op.sym.sgd", None)
# Defined in ./src/op/regs/regs.cc
shape = _APIS.get("mnm.op.sym.shape", None)
# Defined in ./src/op/regs/regs.cc
sigmoid = _APIS.get("mnm.op.sym.sigmoid", None)
# Defined in ./src/op/regs/regs.cc
sigmoid_dx = _APIS.get("mnm.op.sym.sigmoid_dx", None)
# Defined in ./src/op/regs/regs.cc
sign = _APIS.get("mnm.op.sym.sign", None)
# Defined in ./src/op/regs/regs.cc
sin = _APIS.get("mnm.op.sym.sin", None)
# Defined in ./src/op/regs/regs.cc
smooth_l1_loss = _APIS.get("mnm.op.sym.smooth_l1_loss", None)
# Defined in ./src/op/regs/regs.cc
smooth_l1_loss_dpred = _APIS.get("mnm.op.sym.smooth_l1_loss_dpred", None)
# Defined in ./src/op/regs/regs.cc
smooth_l1_loss_dtrue = _APIS.get("mnm.op.sym.smooth_l1_loss_dtrue", None)
# Defined in ./src/op/regs/regs.cc
softmax = _APIS.get("mnm.op.sym.softmax", None)
# Defined in ./src/op/regs/regs.cc
softmax_dx = _APIS.get("mnm.op.sym.softmax_dx", None)
# Defined in ./src/op/regs/regs.cc
split = _APIS.get("mnm.op.sym.split", None)
# Defined in ./src/op/regs/regs.cc
sqrt = _APIS.get("mnm.op.sym.sqrt", None)
# Defined in ./src/op/regs/regs.cc
sqrt_dx = _APIS.get("mnm.op.sym.sqrt_dx", None)
# Defined in ./src/op/regs/regs.cc
squeeze = _APIS.get("mnm.op.sym.squeeze", None)
# Defined in ./src/op/regs/regs.cc
stack = _APIS.get("mnm.op.sym.stack", None)
# Defined in ./src/op/regs/regs.cc
stack_dx = _APIS.get("mnm.op.sym.stack_dx", None)
# Defined in ./src/op/regs/regs.cc
stream_sync = _APIS.get("mnm.op.sym.stream_sync", None)
# Defined in ./src/op/regs/regs.cc
strided_slice = _APIS.get("mnm.op.sym.strided_slice", None)
# Defined in ./src/op/regs/regs.cc
subtract = _APIS.get("mnm.op.sym.subtract", None)
# Defined in ./src/op/regs/regs.cc
sum = _APIS.get("mnm.op.sym.sum", None)
# Defined in ./src/op/regs/regs.cc
take = _APIS.get("mnm.op.sym.take", None)
# Defined in ./src/op/regs/regs.cc
take_dx = _APIS.get("mnm.op.sym.take_dx", None)
# Defined in ./src/op/regs/regs.cc
tanh = _APIS.get("mnm.op.sym.tanh", None)
# Defined in ./src/op/regs/regs.cc
tanh_dx = _APIS.get("mnm.op.sym.tanh_dx", None)
# Defined in ./src/op/regs/regs.cc
transpose = _APIS.get("mnm.op.sym.transpose", None)
# Defined in ./src/op/regs/regs.cc
transpose_dx = _APIS.get("mnm.op.sym.transpose_dx", None)
