if (MNM_USE_CUDA)

  include(${CMAKE_SOURCE_DIR}/cmake/FindCUDA.cmake)
  find_cuda_and_cudnn(${MNM_USE_CUDA} ${MNM_USE_CUDNN})

  file(GLOB_RECURSE CUDA_DEVICE_API_SRCS ${CMAKE_SOURCE_DIR}/src/device_api/cuda/*.cc)
  file(GLOB_RECURSE CUBLAS_BACKEND_SRCS ${CMAKE_SOURCE_DIR}/src/op/backend/cuda/*.cc)
  list(APPEND MNM_SRC_FILES ${CUDA_DEVICE_API_SRCS})
  list(APPEND MNM_LINK_LIBRARIES ${CUDA_CUDA_LIBRARY})
  list(APPEND MNM_LINK_LIBRARIES ${CUDA_CUDART_LIBRARY})
  list(APPEND MNM_3RD_PARTY_INCLUDE_DIRS ${CUDA_TOOLKIT_ROOT_DIR}/include)

  if (CUDA_CUBLAS_LIBRARY)
    list(APPEND MNM_LINK_LIBRARIES ${CUDA_CUBLAS_LIBRARY})
    file(GLOB_RECURSE CUBLAS_BACKEND_SRCS ${CMAKE_SOURCE_DIR}/src/op/backend/cublas/*.cc)
    list(APPEND MNM_SRC_FILES ${CUBLAS_BACKEND_SRCS})
  endif()

  if (MNM_USE_CUDNN)
    message(STATUS "Enabling CUDNN backend...")
    file(GLOB_RECURSE CUDNN_BACKEND_SRCS ${CMAKE_SOURCE_DIR}/src/op/backend/cudnn/*.cc)
    list(APPEND MNM_SRC_FILES ${CUDNN_BACKEND_SRCS})
    list(APPEND MNM_LINK_LIBRARIES ${CUDA_CUDNN_LIBRARY})
    list(APPEND MNM_3RD_PARTY_INCLUDE_DIRS ${CUDNN_INCLUDE_DIR})
  endif()


endif()
